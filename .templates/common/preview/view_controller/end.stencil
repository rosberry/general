extension {{ name | upperFirstLetter  }}ViewController: UIViewControllerRepresentable {
    func makeUIViewController(context: Context) -> {{ name | upperFirstLetter  }}ViewController {
        {{ name | upperFirstLetter  }}ViewController.makePreviewViewController()
    }

    func updateUIViewController(_ uiViewController: {{ name | upperFirstLetter  }}ViewController,
      context: Context) {
    }
}

struct {{ name | upperFirstLetter  }}ViewControllerPreviews: PreviewProvider {

    struct Config: Hashable {
        let name: String
        let scheme: ColorScheme
    }

    static let configs: [Config] = [
        .init(name: "iPhone SE", scheme: .light),
        .init(name: "iPhone 8", scheme: .light),
        .init(name: "iPhone 11", scheme: .dark),
    ]

    static let colorShemes: [ColorScheme] = ColorScheme.allCases

    static var previews: some View {
        ForEach(configs, id: \.self) { config in
            {{ name | upperFirstLetter  }}ViewController.makePreviewViewController().colorScheme(config.scheme).previewDevice(PreviewDevice(rawValue: config.name)).previewDisplayName(config.name)
        }
    }
}
#endif
