{% include "header.stencil" %}

import UIKit

protocol {{ name | capitalize }}ViewInput: class {
    func update(with viewModel: {{ name | capitalize }}ViewModel, force: Bool, animated: Bool)
}

protocol {{ name | capitalize }}ViewOutput: class {
    func viewDidLoad()
}

final class {{ name | capitalize }}ViewController: UIViewController {

    private var viewModel: {{ name | capitalize }}ViewModel
    private let output: {{ name | capitalize }}ViewOutput

    // MARK: - Lifecycle

    init(viewModel: {{ name | capitalize }}ViewModel, output: {{ name | capitalize }}ViewOutput) {
        self.viewModel = viewModel
        self.output = output
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        output.viewDidLoad()
    }

    // MARK: - Layout

    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
    }
}

// MARK: - {{ name | capitalize }}ViewInput

extension {{ name | capitalize }}ViewController: {{ name | capitalize }}ViewInput, ForceViewUpdate {

    func update(with viewModel: {{ name | capitalize }}ViewModel, force: Bool, animated: Bool) {
        let oldViewModel = self.viewModel
        self.viewModel = viewModel

        // update view
    }
}
